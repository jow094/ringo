<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ringo.mapper.AlgorithmMapper">
	
	<select id="selectUserAlgorithm" resultType="AlgorithmVO">
		select * from _ringo_algorithm
			where user_code=#{user_code}
			order by since desc limit 1
	</select>
	
	<insert id="insertUserAlgorithm">
		insert into _ringo_algorithm (user_code, user_tags, user_langs, user_log_location, user_log_geolocation, since)
		select
		    user_code,
		    user_interest as user_tags,
		    user_learning_lang as user_langs,
		    null,
		    null,
		    current_timestamp as since
		from 
		    _ringo_user
		where 
		    user_code = #{user_code}
	</insert>
	
	<update id="updateUserAlgorithm">
		with user_tags_langs as (
		    select distinct
		        u.user_code,
		    
		        group_concat(distinct up1.upost_tag order by up1.upost_tag asc) as user_tags_1,
		        group_concat(distinct cp1.cpost_tag order by cp1.cpost_tag asc) as user_tags_2,
		        group_concat(distinct up.upost_tag order by up.upost_tag asc) as user_tags_3,
		        group_concat(distinct cp.cpost_tag order by cp.cpost_tag asc) as user_tags_4,
		        group_concat(distinct unt.unity_tag order by unt.unity_tag asc) as user_tags_5,
		        group_concat(distinct fwu.user_interest order by fwu.user_interest asc) as user_tags_6,
		        group_concat(distinct fvu.user_interest order by fvu.user_interest asc) as user_tags_7,
		        group_concat(distinct u.user_interest order by u.user_interest asc) as user_tags_8,
		    
		        group_concat(distinct u.user_fluent_lang order by u.user_fluent_lang asc) as user_langs_1,
		        group_concat(distinct u.user_learning_lang order by u.user_learning_lang asc) as user_langs_2,
		        group_concat(distinct u.user_native_lang order by u.user_native_lang asc) as user_langs_3,
		        group_concat(distinct fwu.user_learning_lang order by fwu.user_learning_lang asc) as user_langs_4,
		        group_concat(distinct fwu.user_fluent_lang order by fwu.user_fluent_lang asc) as user_langs_5,
		        group_concat(distinct fwu.user_native_lang order by fwu.user_native_lang asc) as user_langs_6,
		        group_concat(distinct fvu.user_learning_lang order by fvu.user_learning_lang asc) as user_langs_7,
		        group_concat(distinct fvu.user_fluent_lang order by fvu.user_fluent_lang asc) as user_langs_8,
		        group_concat(distinct fvu.user_native_lang order by fvu.user_native_lang asc) as user_langs_9
		    from 
		        _ringo_user u
		    left join
		        _ringo_recomm r on r.user_code = u.user_code
		    left join 
		        _ringo_unity_post up on up.upost_code = r.target_code
		    left join 
		        _ringo_circle_post cp on cp.cpost_code = r.target_code
		    left join 
		        _ringo_unity_post up1 on up1.upost_writer = u.user_code
		    left join 
		        _ringo_circle_post cp1 on cp1.cpost_writer = u.user_code
		    left join
		        _ringo_unity_member um on um.user_code = u.user_code
		    left join
		        _ringo_unity unt on unt.unity_code = um.unity_code
		    left join
		        _ringo_follow fw on fw.user_code = u.user_code
		    left join
		        _ringo_user fwu on fwu.user_code = fw.target_code 
		    left join
		        _ringo_favorite fv on fv.user_code = u.user_code
		    left join
		        _ringo_user fvu on fvu.user_code = fv.target_code
		    where 
		        u.user_code = #{user_code}
		)
		update _ringo_algorithm a
		join user_tags_langs utl on a.user_code = utl.user_code
		set
		    a.user_tags = trim(',' FROM REGEXP_REPLACE(
			    concat_ws(',', 
			        utl.user_tags_1, 
			        utl.user_tags_2, 
			        utl.user_tags_3, 
			        utl.user_tags_4, 
			        utl.user_tags_5, 
			        utl.user_tags_6, 
			        utl.user_tags_7, 
			        utl.user_tags_8
			    ), 
			    ',+', ','
			)),
		    a.user_langs = trim(',' FROM REGEXP_REPLACE(
			    concat_ws(',', 
			        utl.user_langs_1, 
			        utl.user_langs_2, 
			        utl.user_langs_3, 
			        utl.user_langs_4, 
			        utl.user_langs_5, 
			        utl.user_langs_6, 
			        utl.user_langs_7, 
			        utl.user_langs_8, 
			        utl.user_langs_9
			    ), 
			    ',+', ','
			)),
		    a.user_log_location = #{user_log_location},
		    a.user_log_geolocation = #{user_log_geolocation},
		    a.since = now()
		where a.user_code = #{user_code};


	</update>
	
</mapper>  