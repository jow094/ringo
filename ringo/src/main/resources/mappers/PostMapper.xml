<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ringo.mapper.PostMapper">
	
	<resultMap id="selectCirclePost_Map" type="PostVO">
	    <result property="post_code" column="cpost_code"/>
	    <result property="post_writer" column="cpost_writer"/>
	    <result property="post_content" column="cpost_content"/>
	    <result property="post_tag" column="cpost_tag"/>
	    <result property="post_time" column="cpost_time"/>
	    <result property="post_file_path" column="cpost_file_path"/>
	    <result property="post_recomm_count" column="cpost_recomm_count"/>
	    <result property="post_reple_count" column="cpost_reple_count"/>
	    <result property="post_recomm_user" column="cpost_recomm_user"/>
	    <result property="post_ismodify" column="cpost_ismodify"/>
	    <result property="writer_thumbnail_path" column="writer_thumbnail_path"/>
	    <result property="writer_nickname" column="writer_nickname"/>
	    
	    <collection property="reples" ofType="RepleVO">
	        <result property="reple_code" column="reple_code"/>
	        <result property="writer_nickname" column="r_writer_nickname"/>
	        <result property="writer_thumbnail_path" column="r_writer_thumbnail_path"/>
	        <result property="reple_writer" column="reple_writer"/>
	        <result property="reple_content" column="reple_content"/>
	        <result property="reple_time" column="reple_time"/>
	        <result property="reple_recomm_count" column="reple_recomm_count"/>
	    </collection>
	</resultMap>
	
	<resultMap id="selectUnityPost_Map" type="PostVO">
	    <result property="post_code" column="upost_code"/>
	    <result property="post_place" column="upost_place"/>
	    <result property="post_writer" column="upost_writer"/>
	    <result property="post_title" column="upost_title"/>
	    <result property="post_content" column="upost_content"/>
	    <result property="post_tag" column="upost_tag"/>
	    <result property="post_time" column="upost_time"/>
	    <result property="post_file_path" column="upost_file_path"/>
	    <result property="post_recomm_count" column="upost_recomm_count"/>
	    <result property="post_reple_count" column="upost_reple_count"/>
	    <result property="post_recomm_user" column="upost_recomm_user"/>
	    <result property="post_ismodify" column="upost_ismodify"/>
	    <result property="writer_thumbnail_path" column="writer_thumbnail_path"/>
	    <result property="writer_nickname" column="writer_nickname"/>
	    
	    <collection property="reples" ofType="RepleVO">
	        <result property="reple_code" column="reple_code"/>
	        <result property="writer_nickname" column="r_writer_nickname"/>
	        <result property="writer_thumbnail_path" column="r_writer_thumbnail_path"/>
	        <result property="reple_writer" column="reple_writer"/>
	        <result property="reple_content" column="reple_content"/>
	        <result property="reple_time" column="reple_time"/>
	        <result property="reple_recomm_count" column="reple_recomm_count"/>
	    </collection>
	</resultMap>
	
	<select id="selectLastRepleCode" resultType="Integer">
		select max(cast(substring_index(reple_code, '_', -1) as unsigned)) from _ringo_reple where reple_code like 'rp_%'
	</select>
	
	<insert id="insertReple" parameterType="RepleVO">
        insert into _ringo_reple (
            reple_code,
            reple_target,
            reple_writer,
            reple_content
        ) values (
            #{reple_code},
            #{reple_target},
            #{reple_writer},
            #{reple_content}
        )
    </insert>
    
	<select id="selectReple" resultType="RepleVO">
		select r.*, u.user_thumbnail_path as writer_thumbnail_path, u.user_nickname as writer_nickname
   		 from _ringo_reple r
    	 join _ringo_user u on r.reple_writer = u.user_code
    	 where r.reple_target = #{reple_target}
    	 order by r.reple_time desc
	</select>
	
	<select id="selectLastCirclePostCode" resultType="Integer">
		select max(cast(substring_index(cpost_code, '_', -1) as unsigned)) from _ringo_circle_post where cpost_code like 'cp_%'
	</select>
	
	<insert id="insertCirclePost" parameterType="PostVO">
        insert into _ringo_circle_post (
        	cpost_code,
            cpost_writer,
            cpost_content,
            cpost_tag,
            cpost_file_path
        ) values (
            #{post_code},
            #{post_writer},
            #{post_content},
            #{post_tag},
            #{post_file_path}
        )
    </insert>
	
	<select id="selectCirclePost" resultMap="selectCirclePost_Map">
		select cp.*, 
		 u1.user_thumbnail_path as writer_thumbnail_path, 
		 u1.user_nickname as writer_nickname,
		 r.reple_code, 
		 r.reple_writer, 
		 r.reple_content, 
		 r.reple_time,
		 r.reple_recomm_count,
		 u2.user_thumbnail_path as r_writer_thumbnail_path, 
		 u2.user_nickname as r_writer_nickname
		 
   		 from _ringo_circle_post cp
    	 join _ringo_user u1 on cp.cpost_writer = u1.user_code
    	 left join _ringo_reple r on r.reple_target = cp.cpost_code
    	 left join _ringo_user u2 on r.reple_writer = u2.user_code
    	 
    	 where cp.cpost_writer = #{post_writer}
    	 order by cp.cpost_time desc, r.reple_time desc
	</select>
	
	<select id="selectLastUnityPostCode" resultType="Integer">
		select max(cast(substring_index(upost_code, '_', -1) as unsigned)) from _ringo_unity_post where upost_code like 'up_%'
	</select>
	
	<insert id="insertUnityPost" parameterType="PostVO">
        insert into _ringo_unity_post (
        	upost_code,
        	upost_place,
            upost_writer,
            upost_title,
            upost_content,
            upost_tag,
            upost_file_path
        ) values (
            #{post_code},
            #{post_place},
            #{post_writer},
            #{post_title},
            #{post_content},
            #{post_tag},
            #{post_file_path}
        )
    </insert>
	
	<select id="selectUnityPost" resultMap="selectUnityPost_Map">
		select up.*,
           u1.user_thumbnail_path as writer_thumbnail_path, 
           u1.user_nickname as writer_nickname,
           r.reple_code, 
           r.reple_writer, 
           r.reple_content, 
           r.reple_time,
           r.reple_recomm_count,
           u2.user_thumbnail_path as r_writer_thumbnail_path, 
           u2.user_nickname as r_writer_nickname
	    from _ringo_unity_post up
	    join _ringo_user u1 on up.upost_writer = u1.user_code
	    left join _ringo_reple r on r.reple_target = up.upost_code
	    left join _ringo_user u2 on r.reple_writer = u2.user_code
	    where up.upost_place = #{post_place}
	    <if test="post_code != null">
	        and up.upost_time &lt;= (
	            select upost_time from _ringo_unity_post where upost_code = #{post_code}
	        )
	    </if>
	    order by up.upost_time desc
	    limit 10 offset #{unity_board_page} 
	</select>
	
	<select id="selectUnityBoard" resultType="PostVO">
	
	    <choose>
	        <when test="post_code == null">
	            select
	                up.upost_code as post_code,
	                up.upost_title as post_title,
	                up.upost_recomm_count as post_recomm_count,
	                up.upost_reple_count as post_reple_count,
	                up.upost_time as post_time,
	                concat('[', ub.unity_board_category, '] - ', ub.unity_board_name) as unity_board_name,
	                um.unity_member_grade as writer_unity_member_grade,
	                u.user_nickname as writer_nickname
	            from _ringo_unity_post up
	            left join _ringo_unity_member um on um.unity_code = #{unity_code} and up.upost_writer = um.user_code
	            left join _ringo_user u on up.upost_writer = u.user_code
	            left join _ringo_unity_board ub on ub.unity_board_code = #{post_place}
	            where up.upost_place = #{post_place}
	            order by up.upost_time desc
	            limit 20 offset #{unity_board_page}
	        </when>
	        
	        <when test="post_code != null">
	            with post_rank as (
	                select
	                    up.upost_code,
	                    row_number() over (order by up.upost_time desc) as location,
	                    ceil(row_number() over (order by up.upost_time desc)/10)-1 as page
	                from _ringo_unity_post up
	                where up.upost_place = #{post_place}
	            )
	            select
	                up.upost_code as post_code,
	                up.upost_title as post_title,
	                up.upost_recomm_count as post_recomm_count,
	                up.upost_reple_count as post_reple_count,
	                up.upost_time as post_time,
	                concat('[', ub.unity_board_category, '] - ', ub.unity_board_name) as unity_board_name,
	                um.unity_member_grade as writer_unity_member_grade,
	                u.user_nickname as writer_nickname
	            from _ringo_unity_post up
	            left join _ringo_unity_member um on um.unity_code = #{unity_code} and up.upost_writer = um.user_code
	            left join _ringo_user u on up.upost_writer = u.user_code
	            left join _ringo_unity_board ub on ub.unity_board_code = #{post_place}
	            left join post_rank pr on up.upost_code = pr.upost_code
	            where up.upost_place = #{post_place} and pr.page = (select page from post_rank where upost_code = #{post_code})
	            order by up.upost_time desc
	            limit 20;
	        </when>
	    </choose>
	</select>

	
</mapper>  