<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ringo.mapper.PostMapper">
	
	<resultMap id="selectCirclePost_Map" type="PostVO">
	    <result property="post_code" column="post_code"/>
	    <result property="post_writer" column="post_writer"/>
	    <result property="post_content" column="post_content"/>
	    <result property="post_tag" column="post_tag"/>
	    <result property="post_time" column="post_time"/>
	    <result property="post_file_path" column="post_file_path"/>
	    <result property="post_recomm_count" column="post_recomm_count"/>
	    <result property="post_reple_count" column="post_reple_count"/>
	    <result property="post_ismodify" column="post_ismodify"/>
	    <result property="post_is_recommended" column="post_is_recommended"/>
	    <result property="post_seq" column="post_seq"/>
	    <result property="writer_thumbnail_path" column="writer_thumbnail_path"/>
	    <result property="writer_nickname" column="writer_nickname"/>
	    
	    <collection property="reples" ofType="RepleVO">
	        <result property="reple_code" column="reple_code"/>
	        <result property="r_writer_nickname" column="r_writer_nickname"/>
	        <result property="r_writer_thumbnail_path" column="r_writer_thumbnail_path"/>
	        <result property="reple_writer" column="reple_writer"/>
	        <result property="reple_content" column="reple_content"/>
	        <result property="reple_time" column="reple_time"/>
	        <result property="reple_recomm_count" column="reple_recomm_count"/>
	        <result property="reple_is_recommended" column="reple_is_recommended"/>
	    </collection>
	</resultMap>
	
	<resultMap id="selectUnityPost_Map" type="PostVO">
	    <result property="post_code" column="post_code"/>
	    <result property="post_place" column="post_place"/>
	    <result property="post_writer" column="post_writer"/>
	    <result property="post_title" column="post_title"/>
	    <result property="post_content" column="post_content"/>
	    <result property="post_tag" column="post_tag"/>
	    <result property="post_time" column="post_time"/>
	    <result property="post_file_path" column="post_file_path"/>
	    <result property="post_recomm_count" column="post_recomm_count"/>
	    <result property="post_reple_count" column="post_reple_count"/>
	    <result property="post_didrecomm" column="post_didrecomm"/>
	    <result property="post_ismodify" column="post_ismodify"/>
	    <result property="post_is_recommended" column="post_is_recommended"/>
	    <result property="writer_unity_member_grade" column="writer_unity_member_grade"/>
	    <result property="writer_thumbnail_path" column="writer_thumbnail_path"/>
	    <result property="writer_nickname" column="writer_nickname"/>
	    <result property="post_seq" column="post_seq"/>
	    <result property="post_place_name" column="post_place_name"/>
	    
	    <collection property="reples" ofType="RepleVO">
	        <result property="reple_code" column="reple_code"/>
	        <result property="r_writer_nickname" column="r_writer_nickname"/>
	        <result property="r_writer_thumbnail_path" column="r_writer_thumbnail_path"/>
	        <result property="reple_writer" column="reple_writer"/>
	        <result property="reple_content" column="reple_content"/>
	        <result property="reple_time" column="reple_time"/>
	        <result property="reple_recomm_count" column="reple_recomm_count"/>
	        <result property="reple_is_recommended" column="reple_is_recommended"/>
	    </collection>
	</resultMap>
	
	<resultMap id="selectUnityBoard_Map" type="UnityBoardVO">
		<result property="ub_board_code" column="ub_board_code"/>
		<result property="ub_board_fullname" column="ub_board_fullname"/>
		<result property="ub_post_count" column="ub_post_count"/>
	    
	    <collection property="unity_post" ofType="PostVO">
		    <result property="post_code" column="post_code"/>
		    <result property="post_title" column="post_title"/>
		    <result property="post_time" column="post_time"/>
		    <result property="post_recomm_count" column="post_recomm_count"/>
		    <result property="post_reple_count" column="post_reple_count"/>
		    <result property="writer_nickname" column="writer_nickname"/>
		    <result property="writer_unity_member_grade" column="writer_unity_member_grade"/>
		    <result property="post_seq" column="post_seq"/>
	    </collection>
	</resultMap>
	
	<resultMap id="selectOneCirclePost_Map" type="PostVO">
		<result property="post_code" column="cpost_code"/>
		<result property="post_content" column="cpost_content"/>
		<result property="post_tag" column="cpost_tag"/>
		<result property="post_file_path" column="cpost_file_path"/>
	</resultMap>
	
	<resultMap id="selectOneUnityPost_Map" type="PostVO">
		<result property="post_code" column="upost_code"/>
		<result property="post_place" column="upost_place"/>
		<result property="post_title" column="upost_title"/>
		<result property="post_content" column="upost_content"/>
		<result property="post_tag" column="upost_tag"/>
		<result property="post_file_path" column="upost_file_path"/>
	</resultMap>
	
	<select id="selectLastRepleCode" resultType="Integer">
		select max(
	        cast(
	            substring(
	                reple_code,
	                locate('cmt_', reple_code) + 4,
	                locate('-', reple_code) - locate('cmt_', reple_code) - 4
	            ) as unsigned
	        )
	    ) 
	    from _ringo_reple 
	    where reple_code like 'cmt_%-%'
	</select>
	
	<insert id="insertReple" parameterType="RepleVO">
        insert into _ringo_reple (
            reple_code,
            target_code,
            reple_writer,
            reple_content
        ) values (
            #{reple_code},
            #{target_code},
            #{reple_writer},
            #{reple_content}
        )
    </insert>
    
	<select id="selectReple" resultType="RepleVO">
		select 
			c.* ,
			case
            	when exists (
                	select 1 
                	from _ringo_recomm
                	where target_code = c.reple_code and user_code = #{user_code}
           			) then 1
         	   else 0
         	end as reple_is_recommended
		
			from comments c
		 
    		where c.target_code = #{target_code}
    		order by reple_time desc
	</select>
	
	<select id="selectLastCirclePostCode" resultType="Integer">
		select max(
	        cast(
	            substring(
	                cpost_code,
	                locate('cp_', cpost_code) + 3,
	                locate('-', cpost_code) - locate('cp_', cpost_code) - 3
	            ) as unsigned
	        )
	    ) 
	    from _ringo_circle_post
	    where cpost_code like 'cp_%-%'
	</select>
	
	<insert id="insertCirclePost" parameterType="PostVO">
        insert into _ringo_circle_post (
        	cpost_code,
            cpost_writer,
            cpost_content,
            cpost_tag,
            cpost_file_path
        ) values (
            #{post_code},
            #{post_writer},
            #{post_content},
            #{post_tag},
            #{post_file_path}
        )
    </insert>
	
	<select id="selectCirclePost" resultMap="selectCirclePost_Map">
		select c.*,
		 case
            when exists (
                select 1 
                from _ringo_recomm
                where target_code = c.post_code and user_code = #{user_code}
            ) then 1
            else 0
         end as post_is_recommended,
         
		 r.reple_code, 
		 r.reple_writer, 
		 r.reple_content, 
		 r.reple_time,
		 r.reple_recomm_count,
		 u.user_thumbnail_path as r_writer_thumbnail_path, 
		 u.user_nickname as r_writer_nickname,
		 case
            when exists (
                select 1 
                from _ringo_recomm
                where target_code = r.reple_code and user_code = #{user_code}
            ) then 1
            else 0
         end as reple_is_recommended
		 
   		 from cPost c
    	 left join _ringo_reple r on r.target_code = c.post_code
    	 left join _ringo_user u on r.reple_writer = u.user_code
    	 
    	 where c.post_writer = #{visit_code}
    	 order by c.post_time desc, r.reple_time desc
	</select>
	
	<select id="selectLastUnityPostCode" resultType="Integer">
		select max(
	        cast(
	            substring(
	                upost_code,
	                locate('up_', upost_code) + 3,
	                locate('-', upost_code) - locate('up_', upost_code) - 3
	            ) as unsigned
	        )
	    ) 
	    from _ringo_unity_post
	    where upost_code like 'up_%-%'
	</select>
	
	<insert id="insertUnityPost" parameterType="PostVO">
        insert into _ringo_unity_post (
        	upost_code,
        	upost_place,
            upost_writer,
            upost_title,
            upost_content,
            upost_tag,
            upost_file_path
        ) values (
            #{post_code},
            #{post_place},
            #{post_writer},
            #{post_title},
            #{post_content},
            #{post_tag},
            #{post_file_path}
        )
    </insert>
    
    <select id="selectUnityPage" resultType="Integer">
    	with CTE_Posts as (
		    select 
		        upost_code,
		        row_number() over (order by upost_time desc) as post_seq
		    from _ringo_unity_post
		    where upost_place = substring_index(substring_index(#{upost_code}, '-', 2), '-', -1)
		)
		select ceil(post_seq / 20) as page_num
		from CTE_Posts
		where upost_code = #{upost_code};
    </select>
	
	<select id="selectUnityPost" resultMap="selectUnityPost_Map">
		select up.*, 
			case
	            when exists (
	                select 1 
	                from _ringo_recomm
	                where target_code = up.post_code and user_code = #{user_code}
	            ) then 1
	            else 0
	        end as post_is_recommended,
	        cmt.*,
	        case
	            when exists (
	                select 1 
	                from _ringo_recomm
	                where target_code = cmt.reple_code and user_code = #{user_code}
	            ) then 1
	            else 0
	        end as reple_is_recommended
		    from uPost up
        	left join comments cmt on cmt.target_code = up.post_code
		    where up.post_place = #{ub_board_code} and up.post_page = #{ub_page}
		    order by up.post_seq asc
	</select>
	
	<select id="selectUnityBoard" resultMap="selectUnityBoard_Map">
        select * from uBoard
	        where ub_board_code = #{ub_board_code} and post_page = #{ub_page}
	        order by post_seq asc
	</select>
	
	<select id="selectMoreUnityPost" resultMap="selectUnityPost_Map">
	    select up.*, 
	        cmt.*
		    from uPost up
        	left join comments cmt on cmt.target_code = up.post_code
			where up.post_place = substring_index(substring_index(#{upost_code}, '-', 2), '-', -1)
			<if test="ub_add_direction == 'up'">
		        and up.post_page =
		            case 
		                when (select post_page from uPost where post_code = #{upost_code}) = 1 then 1
		                else (select post_page from uPost where post_code = #{upost_code}) - 1
		            end
		        and up.post_time <![CDATA[ > ]]> (select post_time FROM uPost where post_code = #{upost_code})
		    </if>
		    <if test="ub_add_direction == 'down'">
		        and up.post_page = (select post_page from uPost where post_code = #{upost_code}) + 1
		        and up.post_time <![CDATA[ < ]]> (select post_time from uPost where post_code = #{upost_code})
		    </if>
			order by post_seq asc
	</select>

	<select id="selectRecommInfo" resultType="Map">
        select count(*) as recomm_count,  
         	case
	            when exists (
	                select 1 
	                from _ringo_recomm
	                where target_code = #{target_code} and user_code = #{user_code}
	            ) then 1
	            else 0
	        end as is_recommended
        from _ringo_recomm
	        where target_code = #{target_code}
	</select>
	
	<delete id="deleteCirclePost">
		delete from _ringo_circle_post where cpost_code = #{post_code}
	</delete>
	<delete id="deleteUnityPost">
		delete from _ringo_unity_post where upost_code = #{post_code}
	</delete>
	
	<select id="selectOneCirclePost" resultMap="selectOneCirclePost_Map">
		select * from _ringo_circle_post where cpost_code = #{post_code}
	</select>
	<select id="selectOneUnityPost" resultMap="selectOneUnityPost_Map">
		select * from _ringo_unity_post where upost_code = #{post_code}
	</select>
	
</mapper>  