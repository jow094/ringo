<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ringo.mapper.UserMapper">

	<resultMap id="selectUserProfile_Map" type="UserVO">
	    <result property="user_code" column="user_code"/>
	    <result property="user_nickname" column="user_nickname"/>
	    <result property="user_birth" column="user_birth"/>
	    <result property="user_nation" column="user_nation"/>
	    <result property="user_gender" column="user_gender"/>
	    <result property="user_native_lang" column="user_native_lang"/>
	    <result property="user_fluent_lang" column="user_fluent_lang"/>
	    <result property="user_learning_lang" column="user_learning_lang"/>
	    <result property="user_intro" column="user_intro"/>
	    <result property="user_ideal_partner" column="user_ideal_partner"/>
	    <result property="user_objective" column="user_objective"/>
	    <result property="user_topic" column="user_topic"/>
	    <result property="user_interest" column="user_interest"/>
	    <result property="user_correction_degree" column="user_correction_degree"/>
	    <result property="user_usually_time" column="user_usually_time"/>
	    <result property="user_method" column="user_method"/>
	    <result property="user_thumbnail_path" column="user_thumbnail_path"/>
	    <result property="user_profile_path" column="user_profile_path"/>
	    <result property="user_logon" column="user_logon"/>
	    <result property="user_log_time" column="user_log_time"/>
	    <result property="user_log_location" column="user_log_location"/>
	    <result property="user_follower_count" column="user_follower_count"/>
	    <result property="user_following_count" column="user_following_count"/>
	</resultMap>
	
	<select id="selectUser" parameterType="UserVO" resultType="UserVO">
	   select * from _ringo_user
	    where user_id=#{user_id} and user_pw=#{user_pw}
	</select>
	
	<select id="selectUserNickname" resultType="String">
	   select user_nickname from _ringo_user
	    where user_code=#{user_code}
	</select>
	
	<select id="selectUserFavorite" resultType="String">
	   select target_code from _ringo_favorite
	    where user_code=#{user_code}
	</select>
	
	<select id="selectUserFollow" resultType="String">
	   select target_code from _ringo_follow
	    where user_code=#{user_code}
	</select>
	
	<insert id="insertUser" parameterType="UserVO">
	   insert into _ringo_user (
        user_fcode, user_code, user_id, user_pw, user_name, user_nickname, user_birth,
        user_nation, user_gender, user_tel, user_email, user_address,
        user_native_lang, user_fluent_lang, user_learning_lang, 
        user_intro, user_ideal_partner, user_objective, user_topic, user_interest,
        user_correction_degree, user_usually_time, user_method, user_grade, user_thumbnail_path, user_profile_path,
        user_private, user_logon
	    )
	    values (
	        #{user_fcode}, #{user_code}, #{user_id}, #{user_pw}, #{user_name}, #{user_nickname}, #{user_birth},
	        #{user_nation}, #{user_gender}, #{user_tel}, #{user_email}, #{user_address},
	        #{user_native_lang}, #{user_fluent_lang}, #{user_learning_lang}, 
	        #{user_intro}, #{user_ideal_partner}, #{user_objective}, #{user_topic}, #{user_interest},
	        #{user_correction_degree}, #{user_usually_time}, #{user_method}, 'Bronze', #{user_thumbnail_path}, #{user_profile_path},
	        #{user_private}, 0
	    )
	</insert>
	
	<select id="selectLastCode" parameterType="UserVO" resultType="Integer">
		select max(cast(substring_index(user_code, '_', -1) as unsigned)) from _ringo_user where user_code like 'r_%';
	</select>
	
	<select id="selectDuplication" parameterType="Map" resultType="Integer">
	    select count(*) from _ringo_user
	    where ${target} = #{value}
	</select>
	
	<select id="selectUserProfile" resultMap="selectUserProfile_Map">
	    select * from user
	    	where user_code = #{user_code}
	</select>
	
	<select id="selectFollowerProfile" resultType="UserVO">
	    select 
	        u.user_code,
	        u.user_nickname,
	        u.user_thumbnail_path,
	        u.user_nation,
	        u.user_gender,
	        u.user_birth,
	        u.user_logon,
	        u.user_log_time,
	        u.user_log_location,
	        u.user_private
	    from _ringo_user u
	    left join _ringo_follow f on f.user_code = u.user_code
	    
	    where f.target_code = #{user_code}
	</select>
	
	<select id="selectFollowingProfile" resultType="UserVO">
	    select 
	        u.user_code,
	        u.user_nickname,
	        u.user_thumbnail_path,
	        u.user_nation,
	        u.user_gender,
	        u.user_birth,
	        u.user_logon,
     	    u.user_log_time,
	        u.user_log_location,
	        u.user_private
	    from _ringo_user u
	    left join _ringo_follow f on f.target_code = u.user_code
	    
	    where f.user_code = #{user_code}
	</select>
	
	<select id="selectFavoriteProfile" resultType="UserVO">
	    select 
	        u.user_code,
	        u.user_nickname,
	        u.user_thumbnail_path,
	        u.user_nation,
	        u.user_gender,
	        u.user_birth,
	        u.user_logon,
	        u.user_log_time,
	        u.user_log_location,
	        u.user_private
	    from _ringo_user u
	    left join _ringo_favorite f on f.target_code = u.user_code
	    
	    where f.user_code = #{user_code}
	</select>
	
	<insert id="insertFavorite">
		insert into _ringo_favorite values(#{user_code},#{target_code})
	</insert>
	
	<delete id="deleteFavorite">
		delete from _ringo_favorite where user_code = #{user_code} and target_code = #{target_code}
	</delete>
	
	<insert id="insertFollow">
		insert into _ringo_follow values(#{user_code},#{target_code},now())
	</insert>
	
	<delete id="deleteFollow">
		delete from _ringo_follow where user_code = #{user_code} and target_code = #{target_code}
	</delete>
	
	<insert id="insertRecomm">
		insert into _ringo_recomm values(#{user_code},#{target_code})
	</insert>
	
	<delete id="deleteRecomm">
		delete from _ringo_recomm where user_code = #{user_code} and target_code = #{target_code}
	</delete>
	
	<select id="selectUserEverything" resultType="UserVO">
		select * from _ringo_user where user_code = #{user_code}
	</select>
	
	<update id="updateUserInfo">
		update _ringo_user
	    set
        	user_pw = #{user_pw},
			user_nickname = #{user_nickname},
			user_tel = #{user_tel}, 
			user_email = #{user_email}, 
			user_address = #{user_address},
			user_native_lang = #{user_native_lang},
			user_fluent_lang = #{user_fluent_lang},
			user_learning_lang = #{user_learning_lang},
			user_intro = #{user_intro},
			user_ideal_partner = #{user_ideal_partner},
			user_objective = #{user_objective},
			user_topic = #{user_topic},
			user_interest = #{user_interest},
			user_correction_degree = #{user_correction_degree},
			user_usually_time = #{user_usually_time},
			user_method = #{user_method},
			user_thumbnail_path = #{user_thumbnail_path},
			user_profile_path = #{user_profile_path},
			user_private = #{user_private}
        where user_code = #{user_code}
    </update>
    
    <select id="selectUserPicture" resultType="UserVO">
    	select user_thumbnail_path, user_profile_path from _ringo_user where user_code = #{user_code}
    </select>
	
	<!-- 
	<select id="getMember" resultType="MemberVO">		
		 select e.*, d.dname as emp_dname
		  from Member e
		  join dept d on e.emp_dnum = d.dnum
	      where e.emp_id=#{emp_id} and e.approval=0
	</select>
	
	<select id="getSetting" resultType="SettingVO">
		select s.*, 
		t1.tool_name as tool_name_1, t1.tool_url as tool_url_1, 
		t2.tool_name as tool_name_2, t2.tool_url as tool_url_2, 
		t3.tool_name as tool_name_3, t3.tool_url as tool_url_3, 
		t4.tool_name as tool_name_4, t4.tool_url as tool_url_4
		 from user_setting s
		 left join tools t1 on s.tool_id_1 = t1.tool_id
		 left join tools t2 on s.tool_id_2 = t2.tool_id
		 left join tools t3 on s.tool_id_3 = t3.tool_id
		 left join tools t4 on s.tool_id_4 = t4.tool_id
		 where s.emp_id=#{emp_id}
	</select>
	
	<select id="getSearchedMemberList" resultType="MemberVO">
	    select e.*,s.log_on,d.dname as emp_dname
	    from Member e
	    left join user_setting s on e.emp_id = s.emp_id and e.approval=0
	    left join dept d on e.emp_dnum = d.dnum
	    where 
	    replace(emp_name, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_tel, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_email, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_dnum, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_position, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_job, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_bnum, ' ', '') like concat('%', #{keyword}, '%')
	    or replace(emp_work_type, ' ', '') like concat('%', #{keyword}, '%')
	    and e.approval=0
	</select>
	
	<select id="getTeamList" resultType="MemberVO">
		select e.*,s.log_on,d.dname as emp_dname
	     from Member e
	     left join user_setting s on e.emp_id = s.emp_id and e.approval=0
	     left join dept d on e.emp_dnum = d.dnum
	     where emp_dnum = (
	         select emp_dnum
	         from Member
	         where emp_id = #{emp_id} and approval=0
	     ) and emp_bnum = (
	         select emp_bnum
	         from Member
	         where emp_id = #{emp_id} and approval=0
	     ) and e.emp_id != #{emp_id} and e.emp_id not in (select favorite_emp_id from user_favorites where emp_id = #{emp_id} and favorite_emp_id is not null)
	     order by s.log_on desc;
	</select>
	
	<select id="searchTools" resultType="SettingVO">
		select *
	     from tools
	     where tool_name like concat('%', #{keyword}, '%')
	</select>
	
	<update id="updateFavoriteTool" parameterType="SettingVO">
	    UPDATE user_setting
	     SET tool_id_1=#{tool_id_1},tool_id_2=#{tool_id_2},tool_id_3=#{tool_id_3},tool_id_4=#{tool_id_4}
	   		 WHERE emp_id=#{emp_id}
	</update>
	
	<update id="logout" parameterType="String">
	    UPDATE user_setting
	     SET log_on = false
	   	 WHERE emp_id=#{emp_id}
	</update>
	
	<update id="login" parameterType="String">
	    UPDATE user_setting
	     SET log_on = true
	   	 WHERE emp_id=#{emp_id}
	</update>

	<insert id ="followEmp">
		insert into user_favorites
		value (#{user_emp_id},#{emp_id},null)
	</insert>

	<delete id ="unfollowEmp">
		delete from user_favorites 
		where emp_id=#{user_emp_id} and favorite_emp_id=#{emp_id};
	</delete>


	<insert id="dummy">
	    INSERT INTO work_record 
	    (emp_id, date, presence, check_in, working_time, overtime, night_work_time, special_working_time) 
	    VALUES 
	    (#{emp_id}, #{date}, #{presence}, #{check_in}, #{working_time}, #{overtime}, #{night_work_time}, #{special_working_time})
	</insert>
	
	<select id = "emp_dummy" resultType="String">
		select emp_id from Member
	</select>
	
	<insert id="dummySetting">
	    INSERT INTO user_setting
	    (emp_id, tool_id_1, tool_id_2, tool_id_3, tool_id_4, log_on) 
	    VALUES 
	    (#{emp_id}, null, null, null, null, false)
	</insert>
	
	<insert id="dummyFavorite">
	    INSERT INTO user_favorites
	    (emp_id, favorite_emp_id, favorite_room_id) 
	    VALUES 
	    (#{emp_id}, null, null)
	</insert>
	
	<select id = "getPresence" resultType="java.util.Map" >
		select date,presence,check_in from work_record where emp_id = #{emp_id} and date between #{startDate} and #{endDate}
	</select> -->
	
</mapper>  